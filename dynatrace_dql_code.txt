fetch logs
| filter log.source=="linux.log"

DQl --->
data record(text="Vivek,search,savedsearch")

SPL --->
| makeresults 
| eval text="Vivek,search,savedsearch" 
| fields - _time


DQL --->
describe logs

SPL --->

index=main source="Linux.log" | fieldsummary


DQL ---> fetch logs, from:-24h ,to:-2h
SPL---> index=main sourcetype="linux_log" earliest=-24h latest=-2h

DQL ---> fetch logs, from:-24h ,to:-2h, samplingRatio:1000


DQL ---> fetch logs| filter log.source == "linux.log" | summarize total_count = count()
SPL ---> index=main source="linux.log" | stats count as total_count


DQL ---> fetch logs| filter log.source == "linux.log" | summarize count() ,by:status

fetch logs| filter log.source == "linux.log" | summarize count() ,by:{status == "NONE"}

DQL ---> data record (value=2), record(value=3), record(value=4)| summarize total_sum = sum(value), total_avg = avg(value)

SPL ---> | makeresults count=3 
| streamstats count 
| eval number = case(count=1,2, count=2, 3, count=3, 4) 
| stats sum(number) as total_number, avg(number) as total_avg

DQL ---> fetch logs | filter log.source=="linux.log" | summarize dc_count=countDistinctExact(status)

DQL ---> fetch logs  | summarize unique_source_count=countDistinctExact(log.source)
SPL ---> index=main | stats dc(source) as unique_source


DQL ---> fetch logs  | summarize total_count = countIf(log.source=="linux.log")
SPL ---> index=main source="Linux.log" | stats count

DQL ---> data record (value=2), record(value=3), record(value=4) | summarize max(value), min(value), median(value)
SPL ---> | makeresults count=3 | streamstats count | eval number = case(count=1,2, count=2, 3, count=3, 4) | stats max(number) as total_number, min(number) as total_avg

DQL ---> data record (value=2), record(value=3), record(value=4) | summarize takeFirst(value), takeLast(value)
SQL ---> | makeresults count=3 | streamstats count | eval number = case(count=1,2, count=2, 3, count=3, 4) | stats first(number) as first_number, last(number) as last_number
